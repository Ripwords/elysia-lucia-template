// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String    @unique
  emailVerified  Boolean   @default(false) @map("email_verified")
  hashedPassword String?   @map("hashed_password")
  passwordSalt   String?   @map("password_salt")
  sessions       Session[]
}

model Session {
  id        String   @id @map("_id")
  userId    String   @map("user_id") @db.ObjectId
  expiresAt DateTime @map("expires_at")
  fresh     Boolean  @default(false)
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId, id])
}

model PasswordResetToken {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @unique @map("user_id") @db.ObjectId
  hashedToken String   @map("hashed_token")
  expiresAt   DateTime @map("expires_at")
}

model EmailVerificationToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  code      String
  userId    String   @unique @map("user_id") @db.ObjectId
  email     String
  expiresAt DateTime @map("expires_at")
}
